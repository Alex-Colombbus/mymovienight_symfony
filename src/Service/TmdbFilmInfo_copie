<?php

namespace App\Service;

use App\Repository\FilmFiltreRepository;
use App\Repository\FilmRepository;
use Symfony\Contracts\HttpClient\HttpClientInterface;

class TmdbFilmInfo
{
    private $client;
    private $filmFiltreRepository;
    private $filmRepository;
    private $token;
    private $tconst;
    private $id;
    private $title = null;
    private $duration = null;
    private $synopsis = null;
    private $posterPath = null;
    private $isAdult =  null;
    private $genres = null;
    private $releaseDate = null;
    private $imdbRating = null;
    private $tmdbRating = null;
    private $actors = null;
    private $importantCrew = null;
    private bool $isValid = false;

    public function __construct(HttpClientInterface $client, string $tokenKey, FilmFiltreRepository $filmFiltreRepository, FilmRepository $filmRepository)
    {
        $this->client = $client;
        $this->token = $tokenKey;
        $this->filmRepository = $filmRepository;
        $this->filmFiltreRepository = $filmFiltreRepository;
    }

    public function setFilmInfos(): void
    {
        $response = $this->client->request('GET', 'https://api.themoviedb.org/3/find/' . $this->tconst . '?external_source=imdb_id&language=fr&append_to_response=credits', [
            'headers' => [
                'Authorization' => 'Bearer ' . $this->token,
                'accept' => 'application/json',
            ],
        ]);

        $filmFiltreBDD = $this->filmFiltreRepository->find($this->tconst);
        $filmBDD = $this->filmRepository->find($this->tconst);

        $this->id = $response->toArray()['movie_results'][0]['id'];
        $this->title = $response->toArray()['movie_results'][0]['title'];
        $this->duration = $filmBDD->getRuntimeMinutes();
        $this->synopsis = $response->toArray()['movie_results'][0]['overview'];
        $this->posterPath = $response->toArray()['movie_results'][0]['poster_path'];
        $this->isAdult = $response->toArray()['movie_results'][0]['adult'];
        $this->genres = $filmFiltreBDD->getGenres();
        $this->releaseDate = $response->toArray()['movie_results'][0]['release_date'];
        $this->imdbRating = $filmFiltreBDD->getAverageRating();
        $this->tmdbRating = $response->toArray()['movie_results'][0]['vote_average'];

        $response = $this->client->request('GET', 'https://api.themoviedb.org/3/movie/' . $this->id . '/credits?language=fr-FR', [
            'headers' => [
                'Authorization' => 'Bearer ' . $this->token,
                'accept' => 'application/json',
            ],
        ]);

        $creditsFilmInfoCast = $response->toArray()['cast'];
        $creditsFilmInfoCast = array_slice($creditsFilmInfoCast, 0, 3);
        $creditsFilmInfoCrew = $response->toArray()['crew'];
        $importantCrew = [];
        // On filtre les personnes ayant un job important
        $importantCrew = array_filter($creditsFilmInfoCrew, function ($value) {
            return in_array($value['job'], ['Director', 'Screenplay', 'Novel', 'Story']);
        });

        // On regroupe les jobs par personne
        // On initialise un tableau associatif
        $jobsByName = [];
        // On parcourt le tableau importantCrew

        foreach ($importantCrew as $crewMember) {
            // On extrait le nom et le job
            $name = $crewMember['name'];
            // On ajoute le job au tableau associatif
            $job = $crewMember['job'];
            // Si le nom n'est pas encore dans le tableau, on l'ajoute
            if (!isset($jobsByName[$name])) {
                $jobsByName[$name] = [];
            }
            // On ajoute le job au tableau associatif au nom correspondant
            $jobsByName[$name][] = $job;
        }

        $this->actors = $creditsFilmInfoCast;
        $this->importantCrew = $jobsByName;
    }

    // Getters and Setters

    public function getClient(): HttpClientInterface
    {
        return $this->client;
    }

    public function setClient(HttpClientInterface $client): self
    {
        $this->client = $client;
        return $this;
    }

    public function getTconst(): ?string
    {
        return $this->tconst;
    }

    public function setTconst(?string $tconst): self
    {
        $this->tconst = $tconst;
        return $this;
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function setId(?int $id): self
    {
        $this->id = $id;
        return $this;
    }

    public function getTitle(): ?string
    {
        return $this->title;
    }

    public function setTitle(?string $title): self
    {
        $this->title = $title;
        return $this;
    }

    public function getDuration(): ?int
    {
        return $this->duration;
    }

    public function setDuration(?int $duration): self
    {
        $this->duration = $duration;
        return $this;
    }

    public function getSynopsis(): ?string
    {
        return $this->synopsis;
    }

    public function setSynopsis(?string $synopsis): self
    {
        $this->synopsis = $synopsis;
        return $this;
    }

    public function getPosterPath(): ?string
    {
        return $this->posterPath;
    }

    public function setPosterPath(?string $posterPath): self
    {
        $this->posterPath = $posterPath;
        return $this;
    }

    public function getIsAdult(): ?bool
    {
        return $this->isAdult;
    }

    public function setIsAdult(?bool $isAdult): self
    {
        $this->isAdult = $isAdult;
        return $this;
    }

    public function getGenres(): ?array
    {
        return $this->genres;
    }

    public function setGenres(?array $genres): self
    {
        $this->genres = $genres;
        return $this;
    }

    public function getReleaseDate(): ?\DateTimeInterface
    {
        return $this->releaseDate;
    }

    public function setReleaseDate(?\DateTimeInterface $releaseDate): self
    {
        $this->releaseDate = $releaseDate;
        return $this;
    }

    public function getImdbRating(): ?float
    {
        return $this->imdbRating;
    }

    public function setImdbRating(?float $imdbRating): self
    {
        $this->imdbRating = $imdbRating;
        return $this;
    }

    public function getTmdbRating(): ?float
    {
        return $this->tmdbRating;
    }

    public function setTmdbRating(?float $tmdbRating): self
    {
        $this->tmdbRating = $tmdbRating;
        return $this;
    }

    public function getActors(): ?array
    {
        return $this->actors;
    }

    public function setActors(?array $actors): self
    {
        $this->actors = $actors;
        return $this;
    }

    public function getImportantCrew(): ?array
    {
        return $this->importantCrew;
    }

    public function setImportantCrew(?array $importantCrew): self
    {
        $this->importantCrew = $importantCrew;
        return $this;
    }
}
